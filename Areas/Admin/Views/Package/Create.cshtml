@model KGQT.Models.tbl_ShippingOrder
@using KGQT.Commons
@{
    ViewData["Title"] = "Tạo kiện";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<ul id="breadcrumbs" class="mb-2">
    <li><a href="/admin/home">Trang chủ</a></li>
    <li><a href="/admin/Package/Index">Danh sách kiện</a></li>
    <li><a>Thêm kiện</a></li>
</ul>
<div class="container bg-white py-4">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xl-12 col-sm-12">
            <h1 class="text-primary text-uppercase fw-bold">Thêm đơn</h1>
        </div>
        <div class="col-lg-12 col-md-12 col-xl-12 col-sm-12">
            <form method="post" action="Create" id="frmShip">
                <div class="form-group mb-4">
                    <label class="required" for="txtShipID">Tài khoản khách hàng:</label>
                    <input type="text" class="form-control" id="txtUserName" name="Username" placeholder="Nhập tài khoản khách hàng">
                </div>
                <div class="form-group mb-4">
                    <label class="required" for="txtShipID">Mã vận đơn</label>
                    <input type="text" class="form-control" id="txtPackage" name="PackageCode" placeholder="Nhập mã vận đơn">
                    <i class="fs-7">Có thể tạo nhiều Mã Vận Đơn cùng lúc bằng dấu "," hoặc ":". Ví dụ: mavandon1,mavandon2 hoặc mavandon1;mavandon2</i>
                </div>
                <div class="form-group mb-2">
                    <label class="required mb-0 text-primary fw-bold">Phương thức vận chuyển</label>
                </div>
                <div class="form-group mb-4">
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="movingfast" name="MovingMethod" value="1">
                        <label class="form-check-label" for="movingfast">Nhanh</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="movingslow" name="MovingMethod" value="2">
                        <label class="form-check-label" for="movingslow">Thường</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="movingofficial" name="MovingMethod" value="3">
                        <label class="form-check-label" for="movingofficial">Bộ</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="movingofficial" name="MovingMethod" value="4">
                        <label class="form-check-label" for="movingofficial">Bộ lô</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="movingofficial" name="MovingMethod" value="5">
                        <label class="form-check-label" for="movingofficial">Biển</label>
                    </div>
                </div>
                <div class="form-group mb-2">
                    <label class="mb-0">Kho</label>
                </div>
                <div class="form-group mb-4">
                    <select class="form-control" name="WareHouse">
                        <option value="1">Đông Quản</option>
                        <option value="2">Phật Sơn</option>
                    </select>
                </div>
                <div class="form-group mb-2">
                    <label class="mb-0 text-primary fw-bold">Dịch vụ</label>
                </div>
                <div class="form-group mb-4">
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" name="IsWoodPackage" id="cbPack">
                        <label class="form-check-label" for="cbPack">Đóng gỗ</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" name="IsAirPackage" id="cbAirbag">
                        <label class="form-check-label" for="cbAirbag">Túi khí</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" name="IsInsurance" id="cbInsurance" onchange="showhideDeclare(this)">
                        <label class="form-check-label" for="cbInsurance">Bảo hiểm</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" name="isBrand" id="CbIsBrand">
                        <label class="form-check-label" for="isBrand">Hàng hiệu</label>
                    </div>
                </div>
                <div class="form-group mb-4" id="renderPackages"></div>
                <div id="frmDeclare" style="display:none">
                    <div class="form-group mb-2">
                        <label class="required mb-0 text-primary fw-bold">Kê khai</label>
                    </div>
                    <div class="form-group mb-4">
                        <label>Link sản phẩm</label>
                        <input type="text" class="form-control" name="Declaration">
                    </div>
                    <div class="form-group mb-4">
                        <label>Giá</label>
                        <input type="text" class="form-control" name="DeclarePrice" onkeyup="format(this)">
                    </div>
                </div>
                <div class="form-group mb-4">
                    <label for="txtShipID">Thu hộ</label>
                    <input type="text" class="form-control" data-type="formatvnd" id="txtSurCharge" onkeyup="format(this)" name="SurCharge" placeholder="Nhập số tiền">
                </div>
                <div class="form-group mb-4">
                    <label for="txtShipID">Mã file lô</label>
                    <input type="text" class="form-control" id="txtBigPackage" name="BigPackage" placeholder="Nhập mã file lô">
                </div>
                <div class="form-group mb-4">
                    <label for="txtShipID">Mô tả</label>
                    <textarea class="form-control inputNode" name="Note" placeholder="Nhập mô tả (tối đa 40 từ)" rows="4"></textarea>
                </div>

                <div class="col-md-12 col-sm-12 col-lg-12 text-center">
                    <button type="button" class="btn bg-nsh1" onclick="insert()">Lưu</button>
                    <button type="reset" class="btn btn-secondary mr-4">Nhập lại</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="choosePack" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="choosePackLabel" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-dark">Chọn kiện để khớp</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <span>Mã kiện vừa nhập gần giống với các kiện sau:</span>
                <i>(Chọn 1 mã kiện để khớp hoặc đóng để giữ nguyên mã vừa nhập)</i>
                <div id="choosePackBody" class="p-2"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn bg-nsh2" onclick="select()">Chọn</button>
                <button type="button" class="btn bg-nsh1" data-bs-dismiss="modal">Hủy</button>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('#txtUserName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/admin/package/AutoComplete',
                    type: 'GET',
                    data: {
                        s: request.term
                    },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 3,
            delay: 500,
            select: function (event, ui) {
                $(this).val(ui.item.username);
                return false;
            },
            open: function () {
                $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
            },
            close: function () {
                $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
            }
        }).autocomplete("instance")._renderItem = function (ul, item) {
            return $("<li>")
                .append("<div>" + item.username + " - " + item.email + "</div>")
                .appendTo(ul);
        };

        $('#txtBigPackage').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/admin/package/BigPackageComplete',
                    type: 'GET',
                    data: {
                        s: request.term
                    },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 1,
            delay: 300,
            select: function (event, ui) {
                $(this).val(ui.item.id);
                return false;
            },
            open: function () {
                $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
            },
            close: function () {
                $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
            }
        }).autocomplete("instance")._renderItem = function (ul, item) {
            return $("<li>")
                .append("<div>" + item.id + " - " + item.bigPackageCode + "</div>")
                .appendTo(ul);
        };

        $('.inputNode').off().on('keypress', function () {
            if ($(this).val().length >= 40)
                helper.showErr("Mô tả quá dài vui lòng nhập không vượt quá 40 ký tự");
        })
    });
    function beforeAdd() {
        var data = helper.form2Object($('#frmShip').serializeArray());

        if (!data.Username) {
            helper.showErr('Vui lòng nhập tài khoản khách hàng!');
            return
        }

        if (!data.PackageCode) {
            helper.showErr('Vui lòng nhập mã kiện!');
            return
        }

        if (!data.WareHouse) {
            helper.showErr('Hãy chọn kho TQ nhập hàng!');
            return
        }
        if (data.IsInsurance) {
            if (!data.Declaration || !data.DeclarePrice) {
                helper.showErr('Vui lòng kê khai thông tin để tính phí bảo hiểm!');
                return;
            }
        }

        if (data.DeclarePrice) {
            data.DeclarePrice = $('input[name="DeclarePrice"]').data('value');
        }

        if (data.Note) {
            if (data.Note.length > 40) {
                helper.showErr("Mô tả quá dài vui lòng nhập không vượt quá 40 ký tự");
                return
            }
        }

        $.ajax({
            url: '/admin/Package/BeforeAdd',
            type: 'GET',
            data: { code: data.PackageCode },
            // other AJAX options here
            beforeSend: function () {
                stopLoading();
            },
            success: function (res) {
                if (res && res.length) {
                    let html = "";
                    $.each(res, function (i, v) {
                        html += '<div class="form-check">';
                        html += '<input class="form-check-input" type="radio" name="choose" value="' + v.packageCode + '">';
                        html += '<label class="form-check-label">' + v.packageCode;
                        if (v.weightReal && parseFloat(v.weightReal) > 0)
                            html += ' - ' + v.weightReal + 'kg';
                        if (v.note)
                            html += ' - ' + v.weightReal;
                        html += '</label>';
                        html += '</div>';
                    });
                    $('#choosePackBody').html(html);
                    $('#choosePack').modal('show');
                }else{
                    insert(data);
                }
            },
            error: function (xhr, status, err) {
                // error handling
            },
            complete: function () {
                stopLoading(true);
            }
        })
    }

    function select(){
        var data = helper.form2Object($('#frmShip').serializeArray());
        let code = $('input[name="choose"]:checked').val();
        if(!code)
            helper.showErr('Vui lòng chọn kiện!');
        
        data.PackageCode = code;
        $('#choosePack').modal('hide');
        insert(data);
    }

    function showhideDeclare(o) {
        if (!$(o).is(':checked'))
            $('#frmDeclare').css('display', 'none');
        else
            $('#frmDeclare').css('display', 'block');
    }

    function insert() {
       var data = helper.form2Object($('#frmShip').serializeArray());

        if (!data.Username) {
            helper.showErr('Vui lòng nhập tài khoản khách hàng!');
            return
        }

        if (!data.PackageCode) {
            helper.showErr('Vui lòng nhập mã kiện!');
            return
        }

        if (!data.WareHouse) {
            helper.showErr('Hãy chọn kho TQ nhập hàng!');
            return
        }
        if (data.IsInsurance) {
            if (!data.Declaration || !data.DeclarePrice) {
                helper.showErr('Vui lòng kê khai thông tin để tính phí bảo hiểm!');
                return;
            }
        }

        if (data.DeclarePrice) {
            data.DeclarePrice = $('input[name="DeclarePrice"]').data('value');
        }

        if (data.Note) {
            if (data.Note.length > 40) {
                helper.showErr("Mô tả quá dài vui lòng nhập không vượt quá 40 ký tự");
                return
            }
        }
        $.ajax({
            url: '/admin/Package/Create',
            type: 'POST',
            data: { sData: JSON.stringify(data) },
            // other AJAX options here
            beforeSend: function () {
                stopLoading();
            },
            success: function (res) {
                if (res.isError)
                    helper.showErr(res.message)
                else
                    helper.showSuc(res.message, false, "Thành công", "/admin/Package/index")
            },
            error: function (xhr, status, err) {
                // error handling
            },
            complete: function () {
                stopLoading(true);
            }
        })
    }

    function format(e) {
        helper.getChange(e)
    }
</script>
