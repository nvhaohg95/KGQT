@{
    ViewData["Title"] = "Gửi thông báo";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="row mb-2 w-100">
    <ul class="ps-2" id="breadcrumbs">
        <li class="text-uppercase fw-bold"><a href="Index">Thông báo</a></li>
        <li class="text-uppercase fw-bold"><a class="active">Thêm</a></li>
    </ul>
</div>

<div class="row justify-content-center w-100">
    <div class="col-8">
        <form id="frmAdd">
            <div class="form-group">
                <h5 class="fw-bold text-danger text-uppercase mt-2">Gửi thông báo</h5>
            </div>
            <div class="form-group">
                <div class="w-100">
                    <label class="required" for="To">Gửi đến:</label>
                    <input type="text" class="form-control" id="To" name="To" placeholder="Nhập tài khoản khách hàng">
                </div>
                <div class="d-flex align-items-center justify-content-end mt-2">
                    <label class="mb-0 mr-2" for="SendToAll">Gửi tất cả</label>
                    <input type="checkbox" class="form-control-check" id="SendToAll" name="SendToAll" onclick="onChange()">
                </div>
            </div>
            <div class="form-group mb-4">
                <label class="required" for="Contents">Nội dung</label>
                <textarea rows="10" class="form-control" id="Contents" name="Contents" placeholder="Nhập nội dung"></textarea>
            </div>
            <div class="col-md-12 col-sm-12 col-lg-12 text-right">
                <a class="btn btn-sm btn-danger mr-4 w-100px" href="Index">Quay lại</a>
                <button type="button" class="btn btn-sm btn-success w-100px" onclick="beforInsert()">Gửi</button>
            </div>
        </form>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('#To').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/admin/WithDraw/AutoCompleteUser',
                    type: 'GET',
                    data: {
                        s: request.term
                    },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 3,
            delay: 500,
            select: function (event, ui) {
                $(this).val(ui.item.username);
                return false;
            },
            open: function () {
                $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
            },
            close: function () {
                $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
            }
        }).autocomplete("instance")._renderItem = function (ul, item) {
            return $("<li>")
                .append("<div>" + item.username + " - " + item.email + "</div>")
                .appendTo(ul);
        };;
    });

    function onChange() {
        var checked = $("#SendToAll")[0].checked;
        $("#To").val("");;
        $("#To").prop('disabled', checked);

    }

    function beforInsert() {
        $.ajax({
            url: '/api/zalo/CheckToken',
            type: 'GET',
            success: function (respone) {
                if (respone)
                    window.open(respone, '_blank');
                else {
                    insert();
                }
            },
            error: function (xhr, status, err) {
                helper.showErr('Hệ thống thực thi không thành công. Vui lòng thử lại!')

            }
        });
    }


    function insert() {
        var data = helper.form2Object($('#frmAdd').serializeArray());
        if (!data) {
            helper.showErr('Hệ thống thực thi không thành công. Vui lòng thử lại sau!');
            return;
        }
        if (!data.To && !data.SendToAll) {
            helper.showWarn('Vui lòng chọn người nhận!');
            return;
        }
        if (!data.Contents) {
            helper.showWarn('Vui lòng nhập nội dung!');
            return
        }
        $.ajax({
            url: '/Admin/Notification/Create',
            type: 'POST',
            data: data,
            success: function (respone) {
                if (respone.isError)
                    helper.showErr(respone.message)
                else {
                    helper.showSuc('Gửi thành công!');
                }
            },
            error: function (xhr, status, err) {
                helper.showErr('Hệ thống thực thi không thành công. Vui lòng thử lại!')

            }
        });
    }
</script>

