@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<ul id="breadcrumbs" class="mb-2">
    <li><a href="/admin/home">Trang chủ</a></li>
    <li><a href="/admin/shippingorder/index">Danh sách ký gửi</a></li>
    <li><a>Thêm mới</a></li>
</ul>
<div class="container bg-white py-4">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xl-12 col-sm-12">
            <h1 class="text-primary text-uppercase fw-bold">Thêm đơn</h1>
        </div>
        <div class="col-lg-12 col-md-12 col-xl-12 col-sm-12">
            <form method="post" action="Create" id="frmShip">
                <div class="form-group mb-4">
                    <label class="required" for="txtShipID">Mã vận đơn</label>
                    <input type="text" class="form-control" id="txtShipID" name="ShippingOrderCode" placeholder="Nhập mã vận đơn">
                </div>
                <div class="form-group mb-2">
                    <label class="required mb-0">Phương thức vận chuyển</label>
                </div>
                <div class="form-group mb-4">
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="movingfast" name="ShippingMethod" value="1">
                        <label class="form-check-label" for="movingfast">Nhanh</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="movingslow" name="ShippingMethod" value="2">
                        <label class="form-check-label" for="movingslow">Chậm</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" id="movingofficial" name="ShippingMethod" value="3">
                        <label class="form-check-label" for="movingofficial">Chính ngạch</label>
                    </div>
                </div>
                <div class="form-group mb-2">
                    <label class="mb-0">Dịch vụ</label>
                </div>
                <div class="form-group mb-2">
                    <label class="mb-0" for="txtPackage">Kiện</label>
                </div>
                <div class="input-group mb-4">
                    <input class="form-control" id="txtPackage" placeholder="Nhập mã kiện" />
                    <div class="input-group-append">
                        <button type="button" class="btn btn-success" id="addpackage" onclick="addPackage()">+</button>
                    </div>
                </div>
                <div class="form-group mb-4" id="renderPackages"></div>
                <div class="col-md-12 col-sm-12 col-lg-12 text-center">
                    <button type="reset" class="btn btn-danger mr-4">Nhập lại</button>
                    <button type="button" class="btn btn-success" onclick="insert()">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('#txtPackage').off('keypress').on('keypress', function (e) {
            if (e.which == 13)
                addPackage();
        });

        $('#txtPackage').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/admin/ShippingOrder/AutoCompletePackage',
                    type: 'GET',
                    data: {
                        s: request.term
                    },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 3,
            delay: 500,
            select: function (event, ui) {
                //   $(this).val(ui.item.packageCode);
                renderPackage(ui.item)
                return false;
            },
            open: function () {
                $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
            },
            close: function () {
                $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
            }
        }).autocomplete("instance")._renderItem = function (ul, item) {
            return $("<li>")
                .append("<div>" + item.packageCode + "</div>")
                .appendTo(ul);
        };;
    });
    function renderPackage(data) {
        console.log(data);
    }

    var lstDeclare = [];
    function addPackage() {
        const ip = $('#txtPackage').val();
        if (ip) {
            let hdField = $('#hdPackage');
            let hdValue = hdField.val();
            if (hdValue.includes(ip)) {
                helper.showErr('Bạn đã nhập kiện này!');
                return;
            }
            $.ajax({
                url: '/admin/ShippingOrder/CheckPackage',
                type: 'GET',
                data: { package: ip },
                // other AJAX options here
                success: function (result) {
                    if (!result) {
                        const html = `<div class="form-check form-check-inline package-item">
                                                                                    <i class="fa fa-times mr-2" onclick="delPackage(this)" data-id="${ip}" aria-hidden="true"></i>
                                                                                    <span class="form-check-label">${ip}</span>
                                                                                </div>`;
                        $('#renderPackages').append(html);
                        $('#txtPackage').val('');
                        //Set gia tri cho package field
                        hdValue += ip + ';';
                        hdField.val(hdValue);
                    }
                    else {
                        helper.showErr('Kiện đã tồn tại!');
                    }
                },
                error: function (xhr, status, err) {
                    // error handling
                }
            });
        }
    }

    function delPackage(o) {
        const data = $(o).data('id');
        let hdField = $('#hdPackage');
        let hdValue = hdField.val();
        let r = data + ';';
        hdValue = hdValue.replace(r, '');
        hdField.val(hdValue);
        const e = $(o).closest('.package-item');
        e.remove();
    }

    function showhideDeclare(o) {
        if (!$(o).is(':checked'))
            $('#frmDeclare').css('display', 'none');
        else
            $('#frmDeclare').css('display', 'block');
    }

    function addDeclare() {
        let $link = $("#txtLink"), $Qty = $("#txtQty"), $amount = $('#txtAmount');
        let link = $link.val(), qty = $Qty.val(), amount = $amount.val();

        if (lstDeclare.length) {
            let i = lstDeclare.findIndex(x => x.ProductLink == link && x.ProductPrice == amount && x.ProductQuantity == qty);
            if (i > -1) {
                helper.showErr('Bạn đã khai báo sản phẩm này!')
                return;
            }
        }
        let render = $('#renderDeclare');
        let temp = $('.declare-item', '#hdDeclareHTML');
        if (temp.length) {
            let clone = temp.clone();
            $('.txtLink', clone).val(link);
            $('.txtQty', clone).val(qty);
            $('.txtAmount', clone).val(amount);
            $('.btn-add-declare', clone).attr('data-id', lstDeclare.length);
            render.append(clone);
            lstDeclare.push({ stt: lstDeclare.length, ProductLink: link, ProductPrice: amount, ProductQuantity: qty });
            $link.val('');
            $Qty.val('');
            $amount.val('');
        }
    }

    function subDeclare(o) {
        let parent = $(o).closest('.declare-item');
        if (parent.length) {
            let id = $(o).attr('data-id');
            let i = lstDeclare.findIndex(x => x.stt = id);
            if (i > -1)
                lstDeclare.splice(i, 1);
            parent.remove();
        }
    }

    function insert() {
        var data = helper.form2Object($('#frmShip').serializeArray());
        if (!data.ShippingOrderCode) {
            helper.showErr('Hãy nhập mã vận đơn!');
            return
        }

        if (!data.ShippingMethod) {
            helper.showErr('Hãy chọn loại vận chuyển!');
            return
        }

        if (data.IsInsurance) {
            if (lstDeclare.length == 0) {
                helper.showErr('Vui lòng kê khai thông tin để tính phí bảo hiểm!');
                return;
            }
        }

        const pack = $('#hdPackage').val();
        $.ajax({
            url: '@Url.Action("Create", "ShippingOrder")',
            type: 'POST',
            data: { form: data, package: pack, declares: JSON.stringify(lstDeclare) },
            // other AJAX options here
            success: function (result) {
                if (result == -1)
                    helper.showErr('Đơn đã tồn tại!')

                if (result == 0)
                    helper.showErr('Tạo đơn lỗi!')

                if (result > 0)
                    helper.showSuc('Tạo đơn thành công!')
            },
            error: function (xhr, status, err) {
                // error handling
            }
        });
    }
</script>