@model IEnumerable<KGQT.Models.tbl_Images>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    int imageType = ViewBag.imageType;
    string title = "";
    switch (imageType)
    {
        case 1:
            title = "Logo";
            break;
        case 2:
            title = "Slider";
            break;
        case 3:
            title = "Banner";
            break;
        case 4:
            title = "Sticket";
            break;
        default:
            title = "";
            break;
    }
    ViewData["Title"] = title;
    int pageCurrent = ViewBag.pageCurrent;
    int numberPage = ViewBag.numberPage;
    int numberRecord = ViewBag.numberRecord;
}
<head>
    <link href="~/lib/cropper/cropper.min.css" rel="stylesheet" />
    <script src="~/lib/cropper/cropper.min.js"></script>
</head>

<div class="row mb-2 w-100">
    <ul class="ps-2" id="breadcrumbs">
        <li class="text-uppercase"><a href="/Admin">Trang chủ</a></li>
        <li class="text-uppercase"><a href="/Admin/Image/Index">Hình ảnh</a></li>
        <li class="text-uppercase fw-bold"><a class="active">@title</a></li>
    </ul>
</div>
<div class="row py-2 px-4 w-100">
    <div class="col-12 text-right">
        <button type="button" class="btn btn-sm bg-nsh2 w-100px" onclick="openPopupAdd()">
            Thêm
        </button>
    </div>
    @foreach (var item in Model)
    {
        <div class="col-3 my-2">
            <div class="card position-relative" style="width:18rem;">
                @if(item.Status == 1)
                {
                    <div class="position-absolute top-0 end-0">
                        <button type="button" class="btn btn-sm btn-warning">Đang hiển thị</button>
                    </div>
                }
                <div class="card-img-top border-bottom d-flex align-items-center justify-content-center" style="height:200px;width:100%;">
                    <img src="@item.ImageSrc" style="max-height:200px;max-width:100%;" />
                </div>
                <div class="card-body d-flex align-items-center justify-content-between p-2">
                    <p class="card-text fw-bold m-0">@(item.CreatedOn.ToString("dd/MM/yyyy hh:mm"))</p>
                    <div>
                        <button class="btn btn-sm btn-dark text-white w-100px" style="width:50px" onclick="openPopupEdit('@item.RecID')">Xem</button>
                        <button class="btn btn-sm btn-dark text-white w-100px" style="width:50px" onclick="deleteImage('@item.RecID')">Xóa</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<div class="row p-2 w-100">
    <div class="col-4 align-self-center">
        <span>
            Tổng số:&nbsp
            <b>@numberRecord</b>
        </span>
    </div>
    <div class="col-8">
        @if (numberPage > 1)
        {
            <nav class="d-flex justify-content-end">
                <ul class="pagination m-0">
                    @{
                        int offset = 2; // number display page
                        if (pageCurrent > 1)
                        {
                            <li class="page-item">
                                <button type="button" class="page-link" onclick="nextPage(@pageCurrent,1,@numberPage)">
                                    <i class="fas fa-fast-backward"></i>
                                </button>
                            </li>
                            int prevPage = pageCurrent - 1;
                            <li class="page-item">
                                <button type="button" class="page-link" onclick="nextPage(@pageCurrent,@prevPage,@numberPage)">
                                    <span aria-hidden="true">&laquo;</span>
                                    <span class="sr-only">Previous</span>
                                </button>
                            </li>
                        }

                        int from = pageCurrent - offset;
                        int to = pageCurrent + offset;
                        if (from <= 0)
                        {
                            from = 1;
                            to = offset * 2;
                        }

                        if (to > numberPage)
                        {
                            to = numberPage;
                        }

                        int i;
                        for (i = from; i <= to; i++)
                        {
                            <li class="@(pageCurrent == i ? "page-item active" : "page-item")">
                                <button type="button" class="page-link" onclick="nextPage(@pageCurrent,@i,@numberPage)">@i</button>
                            </li>
                        }
                        if (pageCurrent < numberPage - (to / 2))
                        {
                            <li class="page-item disabled">
                                <a class="page-link">...</a>
                            </li>
                        }
                        if (pageCurrent < numberPage)
                        {
                            int nextPage = pageCurrent + 1;
                            <li class="page-item">
                                <button type="button" class="page-link" onclick="nextPage(@pageCurrent,@nextPage,@numberPage)">
                                    <span aria-hidden="true">&raquo;</span>
                                    <span class="sr-only">Next</span>
                                </button>
                            </li>
                        }
                        if (pageCurrent < numberPage)
                        {
                            <li class="page-item">
                                <button type="button" class="page-link" onclick="nextPage(@pageCurrent,@numberPage,@numberPage)">
                                    <i class="fas fa-fast-forward"></i>
                                </button>
                            </li>
                        }
                    }
                </ul>
            </nav>
        }
    </div>
</div>
<div class="modal fade" id="popupCropper" tabindex="-1" aria-labelledby="popupCropperLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="width:1000px;max-width:1000px">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <h1 class="modal-title fs-5 text-uppercase" id="popupCropperLabel">@title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closePopupAdd()"></button>
            </div>
            <div class="modal-body p-4">
                <div class="d-flex align-items-center align-content-center justify-content-center" style="height:400px;border-width: 1px;border-style: dashed;border-color: gray;">
                    <img id="image_upload" src="~/img/imag-upload.png" alt="upload.png" style="max-width:100%;max-height:100%;"/>
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <div class="d-flex align-items-center">
                    <div class="mr-2">
                        <button class="btn btn-sm btn-info w-100px" onclick="clickUpload()">Tải file</button>
                    </div>
                    <input id="input_upload" type="file" accept="image/*" name="images" class="d-none" onchange="selectImage(this)" />
                </div>
                <div>
                    <button type="button" class="btn btn-sm btn-secondary w-100px" data-bs-dismiss="modal" onclick="closePopupAdd()">Đóng</button>
                    <button type="button" class="btn btn-sm btn-primary w-100px" onclick="uploadImage()">Thêm</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="popupEdit" tabindex="-2" aria-labelledby="popupEditLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="width:1000px;max-width:1000px">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <h1 class="modal-title fs-5 text-uppercase" id="popupEditLabel">@title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closePopupEdit()"></button>
            </div>
            <div class="modal-body d-flex align-items-center justify-content-center" style="height:500px">
                <img id="image_view" src="" style="max-width:100%;max-height:100%;width:auto;height:auto" />
            </div>
            <div class="modal-footer">
                <form id="frmImage" class="d-flex align-items-center justify-content-between w-100">
                    <div class="row g-3 align-items-center">
                        <div class="col-auto">
                            <label for="Status" class="col-form-label">Hiện thị:</label>
                        </div>
                        <div class="col-auto">
                            <input type="checkbox" id="Status" name="Status" class="form-control-check" onchange="onChangeChecked(this)">
                        </div>
                        @if(imageType == 2 || imageType == 3)
                        {
                            <div class="col-auto">
                                <label for="ViewIndex" class="col-form-label">Vị trí:</label>
                            </div>
                            <div class="col-auto w-100px">
                                <input type="number" id="ViewIndex" name="ViewIndex" class="form-control" min="0" max="99">
                            </div>
                        }
                    </div>
                    <div>
                        <button type="button" class="btn btn-sm btn-secondary w-100px" data-bs-dismiss="modal" onclick="closePopupEdit()">Đóng</button>
                        <button type="button" class="btn btn-sm btn-primary w-100px" onclick="updateImage()">Cập nhật</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    const popupEdit = new bootstrap.Modal(document.getElementById("popupEdit"), { backdrop: 'static' });
    const popupCopper = new bootstrap.Modal(document.getElementById("popupCropper"), { backdrop: 'static' });
    const image_upload = document.getElementById("image_upload");
    const input_Upload = document.getElementById("input_upload");
    const image_view = document.getElementById("image_view");
    var fileUpload;
    var image;

    function openPopupAdd(){
        image_upload.src = "/img/imag-upload.png"
        if (!popupCopper) return;
        popupCopper.show();
    }

    function closePopupAdd(){
        image_upload.src = "/img/imag-upload.png"
        if (!popupCopper) return;
        popupCopper.hide();
    }

    function clickUpload() {
        if (!input_Upload) return;
        input_Upload.click();
    }

    function selectImage(e) {
        if (!e.files) return;
        fileUpload = e.files[0];
        let src = URL.createObjectURL(fileUpload);
        image_upload.src = src;
        input_Upload.value = "";
        //setTimeout(() => {
        //    if (cropper)
        //        cropper.destroy();
        //    cropper = new Cropper(image_upload, { aspectRatio: 0, viewMode: 1, minContainerWidth: 1000, minContainerHeight: 400, minCanvasWidth: 900, minCanvasHeight: 300, minCropBoxWidth: 900, minCropBoxHeight: 300 });
        //    input_Upload.value = "";
        //}, 300);
    }

    function uploadImage() {
        if (!fileUpload) {
            helper.showWarn('Vui lòng chọn File tải lên!');
            return;
        }
        let formdata = new FormData();
        formdata.append("FileName", fileUpload.name);
        formdata.append("FileType", @imageType);
        formdata.append("FileExtension", "");
        formdata.append("File", fileUpload);
        $.ajax({
            url: "/Admin/Image/Uploads",
            type: 'POST',
            contentType: false,
            processData: false,
            data: formdata,
            success: function (reponse) {
                if (reponse.isError)
                    helper.showErr(reponse.message)
                else 
                    helper.showSuc(reponse.message);
            },
            error: function (xhr, status, err) {
                helper.showErr('Thêm File không thành công. Vui lòng thử lại!')
            }
        });
    }

    function deleteImage(id) {
        helper.showAlert("Bạn muốn xóa File?")
        .then((res) => {
            if (res.isConfirmed) {
                $.ajax({
                    url: "/Admin/Image/Delete",
                    type: 'POST',
                    data: { id: id },
                    success: function (reponse) {
                        if (reponse.isError)
                            helper.showErr(reponse.message)
                        else
                            helper.showSuc(reponse.message);
                    },
                    error: function (xhr, status, err) {
                        helper.showErr('Xóa File không thành công. Vui lòng thử lại');
                    }
                });
            }
        });
    }

    function openPopupEdit(id) {
        if (!popupEdit) return;
        image = null;
        $.ajax({
            url: "/Admin/Image/GetByID",
            type: 'POST',
            data: { id: id },
            success: function (respone) {
                if (respone.isError) {
                    helper.showErr(res.message);
                }
                else 
                {
                    image_view.src = respone.data.imageSrc;
                    image = respone.data;
                    if (respone.data.status == 1)
                    {
                        $("#Status").prop('checked', true);
                        $("#ViewIndex").val(respone.data.viewIndex);
                    }
                    else
                    {
                        $("#Status").prop('checked',false);
                        $("#ViewIndex").val("");
                    }
                    popupEdit.show();
                }
            },
            error: function (xhr, status, err) {
                helper.showErr('Không tìm thấy File. Vui lòng thử lại!');
            }
        });
    }

    function closePopupEdit() {
        if (!popupEdit) return;
        image = null;
        popupEdit.hide();
    }

    function updateImage(){
        debugger
        var form = helper.form2Object($('#frmImage').serializeArray());
        if (!form) return;
        if (!image) {
            helper.showWarn('Không tìm thấy thông tin File!');
            return;
        }
        image.viewIndex = form.ViewIndex;
        helper.showAlert("Cập nhật hình ảnh?").then((res) => {
            if (res.isConfirmed) {
                $.ajax({
                    url: '/Admin/Image/Update',
                    type: 'POST',
                    data: image,
                    success: function (respone) {
                        if (respone.isError)
                            helper.showErr(respone.message)
                        else
                        {
                            helper.showSuc(respone.message);
                        }
                    },
                    error: function (xhr, status, err) {
                        helper.showErr('Hệ thống thực thi không thành công. Vui lòng thử lại!')
                    }
                });
            }
        });
    }

    function onChangeChecked(e){
        $("#ViewIndex").val("");
        $("#ViewIndex").attr("readonly", !e.checked);
        image.status = e.checked ? 1 : 0;
    }
</script>


